<?xml version="1.0" encoding="utf-8" ?>
<!-- Шаг 8 – Биоинформатика – Stepik.pdf -->
<problem
   package = "ru.ejudge.sample_contest"
   id = "F"
   type = "standard">
  <keywords>F</keywords>
  <statement language="ru_RU">
    <title>Клонирование фрагмента в плазмиду</title>
    <description>
        <p>Зачастую реакцию лигирования используют для того, чтобы вставить какой-либо фрагмент (например,
            нРНК) в плазмиду. Для этого плазмиду обрабатывают рестриктазой, которая создает липкие концы, и
            последовательности, комплементарные этим липким концам добавляют в фрагмент. Полученные
            фрагменты плазмиды и вставки объединяют в одной реакции лигирования.
        </p>
        <img src="http://195.46.171.236:4192/share/img_2.png"/>
            <p>Ниже показаны только 3 примера
                входных и выходных данных, для проверки задачи будут проведены дополнительные тесты.</p>
    </description>
    <input_format>
        <p>два списка (каждый через отдельный
            input() ). Оба списка содержат последовательность ДНК, записанную в направлении 5'-3', ее липкий
            конец "слева" (на прямой цепи, в направлении 5'-3') и липкий конец "справа" (на обратной цепи, в
            направлении 3'-5'). Если липкий конец отсутствует, это будет обозначено знаком '-'.
        </p>
    </input_format>
    <output_format>
        <p>Программа должна
            проверить, содержат ли две последовательности комплементарные друг другу липкие концы,
            необходимые для вставки фрагмента (последовательность 2) в плазмиду (последовательность 1).
            Если комплиментарные липкие концы присутствуют, программа должна выполнить лигирование этих
            молекул с образованием кольцевой плазмиды и вывести результат (прямую цепь, начиная с первого
            нуклеотида плазмиды, в направлении 5'-3') на экран при помощи функции print() . Если молекулы
            ДНК не содержат липких концов, программа должна вывести на экран False.
        </p>

    </output_format>
  </statement>
  <examples>
    <example>
        <input>ATCGATCGATG GATC TTAA
GGTCGTAGATA AATT CTAG
        </input>
        <output>GATCATCGATCGATGAATTGGTCGTAGATA</output>
    </example>
      <example>
          <input>ACGTAGCATCGTAT GATC TCGA
GCGTATAGCTAGGA CTAG AGCT
          </input>
          <output>False</output>
      </example>
  </examples>
</problem>
