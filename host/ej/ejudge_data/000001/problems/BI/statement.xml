<?xml version="1.0" encoding="utf-8" ?>
<!-- Задача VI.1.1.4. Обход графена (35 баллов) -->
<problem
        package="ru.ejudge.sample_contest"
        id="BI"
        type="standard">
    <keywords>BI</keywords>
    <statement language="ru_RU">
        <title>Обход графена</title>
        <description>
             <p>Графен — двумерная аллотропная модификация углерода, образованная слоем
                атомов углерода толщиной в один атом. Атомы углерода расположены в узлах гексагональной (шестиугольной) двумерной кристаллической решетки, как представлено
                на рисунках ниже.</p>
            <p>Новейшая разработка Берляндских ученых — наноробот по перестройке графена — находится над одним из атомов решетки и ориентирован в направлении одного
                из соседних атомов, как показано на рисунке слева.</p>
            <p>Наноробот умеет выполнять программы, которые представляют собой последовательности команд, которые для краткости записываются в виде строки. Пока поддерживается выполнение двух команд:</p>
            <ul>
                <li>L — переместиться к соседнему атому согласно ориентации, после чего повернуться на 60° налево.</li>
                <li>R — переместиться к соседнему атому согласно ориентации, после чего повернуться на 60° направо.</li>
            </ul>
            <p>В будущем ученые планируют добавить другие команды, такие как, например, замена атомов углерода на другие, что позволит создавать новые материалы на основе
                графена с особыми свойствами.</p>
            <p>Команды программы для наноробота выполняются поочередно слева направо пока все команды не будут выполнены. Например, на рисунке посередине показан пример работы программы <b>RLLLRLLR</b>.</p>
            <img src="http://195.46.171.236:4192/share/2.png"/><br/>
            <img src="http://195.46.171.236:4192/share/3.png"/>
            <p>Ваша задача — научиться возвращать наноробота в исходное состояние. А именно,
                для некоторой программы P Вам нужно построить программу Q, которая будет
                возвращать наноробота, выполнившего программу P, в исходное положение <b>с той
                    же ориентацией</b>.</p>
            <p>Например, пусть P — упомянутая выше программа <b>RLLLRLLR</b>. Тогда в качестве
                Q можно взять программу <b>LLRLLLRL</b>, которая возвращает наноробота на место, как показано на рисунке справа. Также в качестве Q можно взять программу <b>LLLRLL</b>, которая немного короче той, что показана на рисунке.</p>
            <p>Пусть программа P состоит из n команд. Вам будет доступно 2 подзадачи <!--(см.
                раздел <b>Методика проверки</b>)-->:</p>
             <ol style="list-style-type: upper-latin">
                <li>Построить программу Q, состоящую из не более чем n + 20 команд.</li>
                <li>Построить программу Q, состоящую из минимально возможно количества команд.</li>
            </ol>
        </description>
        <input_format>
            <p>В единственной строке дана строка длины n, состоящая из символов L и R —
                программа P (1&le;n&le;1000).</p>
            <p>Гарантируется, что программа P не приводит наноробота в исходное положение
                с изначальной ориентацией.</p>
        </input_format>
        <output_format><p>Выведите программу Q в виде строки, состоящей из символов L и R. Если возможных решений несколько — выведите любое.</p>
        </output_format>
    </statement>
    <examples>
        <example>
            <input>RLLLRLLR</input>
            <output>LLLRLL</output>
        </example>
        <example>
            <input>RRRRRL</input>
            <output>LLLLLR</output>
        </example>
    </examples>
</problem>
